#include "loceyeinfo.h"
#include "ui_loceyeinfo.h"

locEyeInfo::locEyeInfo(QWidget *parent) :
    QLabel(parent),
    ui(new Ui::locEyeInfo)
{
    ui->setupUi(this);
    tt = new QTimer(this);
    connect(tt,SIGNAL(timeout()),this,SLOT(update()));
    tt->start(20);

    for(int k=0;k<256;++k)
    {
        colorTable.push_back( qRgb(k,k,k) );
    }
}

locEyeInfo::~locEyeInfo()
{
    delete ui;
}

void locEyeInfo::mousePressEvent(QMouseEvent *event)
{
    leftUP = QPoint(event->x(),event->y());
    current = leftUP;
}

void locEyeInfo::mouseMoveEvent(QMouseEvent *event)
{
    current = QPoint(event->x(),event->y());
}

void locEyeInfo::mouseReleaseEvent(QMouseEvent *event)
{
    rightDown = QPoint(event->x(),event->y());
}

void locEyeInfo::keyPressEvent(QKeyEvent *event)
{
    switch (event->key()) {
    case Qt::Key_1:
        this->hide();
        break;
    case Qt::Key_2:
        //std::cout<<"33"<<std::endl;
        this->show();
        break;
    }
}

void locEyeInfo::paintEvent(QPaintEvent *event)
{
    QLabel::paintEvent(event);//先调用父类的paintEvent为了显示'背景'!!!
    QPainter painter(this);
    painter.setRenderHint(QPainter::Antialiasing, true); //设置反走样

    if(!is_draw){
        leftUP = QPoint(0,0);
        rightDown = QPoint(0,0);
        current = QPoint(0,0);
    }else{
        if(is_box_method){
            painter.drawRect(leftUP.x(),leftUP.y(),current.x()-leftUP.x(),current.y()-leftUP.y());
            int x = leftUP.x() + (current.x()-leftUP.x())/2;
            int y = leftUP.y() + (current.y()-leftUP.y())/2;
            painter.setPen(Qt::red);
            painter.drawRect(x,y,2,2);
        }
        if(is_circle_method){
            //****************************************************直接画圆存在问题
            /*
            float d=sqrt((current.x()-leftUP.x())*(current.x()-leftUP.x())+
                         (current.y()-leftUP.y())*(current.y()-leftUP.y()));
            painter.drawEllipse((leftUP.x()+current.x())/2,(leftUP.y()+current.y())/2,d,d);
            */
            Mat tmp;
            eyeMask.copyTo(tmp);
            float d=sqrt((current.x()-leftUP.x())*(current.x()-leftUP.x())+
                         (current.y()-leftUP.y())*(current.y()-leftUP.y()));
            circle(tmp, {(leftUP.x()+current.x())/2,(leftUP.y()+current.y())/2},d/2, Scalar(0, 0, 0),2);
            rectangle(tmp,Rect((leftUP.x()+current.x())/2,(leftUP.y()+current.y())/2,2,2),Scalar(0,0,0),2);
            QImage im(tmp.data,tmp.cols,tmp.rows,tmp.step,QImage::Format_Indexed8);
            im.setColorTable(colorTable);
            setPixmap(QPixmap::fromImage(im));
        }
    }
}
